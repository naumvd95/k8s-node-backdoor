---

- name: Create kubeadm config directory
  file:
    path: "{{ kubeadm_dir }}"
    state: directory

- name: "Copy kubeadm config"
  template:
    src: kubeadm.yaml.j2
    dest: "{{ kubeadm_dir }}/kubeadm.yaml"

- name: reset kubeadm
  shell: "kubeadm reset --force"
  register: reset_cluster

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: kubeadm init --config {{ kubeadm_dir }}//kubeadm.yaml
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: restart kubelet
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_kubelet

- name: "Prepare user kubeconfig file"
  copy:
    src: /etc/kubernetes/admin.conf
    remote_src: yes
    dest: /etc/kubernetes/kubeconfig-public.yaml
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0644

- name: "Replace internal ip with public one for kubeconfig"
  replace:
    path: /etc/kubernetes/kubeconfig-public.yaml
    regexp: "{{ master_internal_ip  }}"
    replace: "{{ master_public_ip  }}"
    backup: yes

- name: "Download user kubeconfig file"
  fetch:
    src: /etc/kubernetes/kubeconfig-public.yaml
    dest: "{{ public_kubeconfig_path }}"
    flat: yes
  run_once: yes
  ignore_errors: yes
